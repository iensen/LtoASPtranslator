INPUT (L)

p0.
p2(2, 2).
p3(1, 2, a).
q1 or q2 or q3.
r if s1 and s2 and not s3.

########## ########## ########## ########## ########## ########## ########## ##########

OUTPUT (ASP)

'sorts #ground_terms = {1, 2, a}. predicates q2(). s2(). p0(). q3(). r(). s3(). s1(). p2(#ground_terms, #ground_terms). p3(#ground_terms, #ground_terms, #ground_terms). q1(). rules p0. p2(2, 2). p3(1, 2, a). q1 | q2 | q3. r :- s1, s2, not s3. '

########## ########## ########## ########## ########## ########## ########## ##########
########## ########## ########## ########## ########## ########## ########## ##########
MODULES
########## ########## ########## ########## ########## ########## ########## ##########
########## ########## ########## ########## ########## ########## ########## ##########

PARSED (L)

[['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'p0')]]]]], ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'p2'), ['terms', ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['num', ['pos', ('numeral', '2')]]]]]]]]], ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'p3'), ['terms', ['bt', ['num', ['pos', ('numeral', '1')]]], ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['const', ('identifier', 'a')]]]]]]]], ['rule', ['sent', ['disj', ['disj', ['unit', ['literal', ['patom', ('identifier', 'q1')]]], ['unit', ['literal', ['patom', ('identifier', 'q2')]]]], ['unit', ['literal', ['patom', ('identifier', 'q3')]]]]]], ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'r')]]]], ['sent', ['conj', ['conj', ['unit', ['literal', ['patom', ('identifier', 's1')]]], ['literal', ['patom', ('identifier', 's2')]]], ['neg_literal', ['patom', ('identifier', 's3')]]]]]]

########## ########## ########## ########## ########## ########## ########## ##########

ADJUSTED (L)

['progr', ['rules', ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'p0')]]]]], ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'p2'), ['terms', ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['num', ['pos', ('numeral', '2')]]]]]]]]], ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'p3'), ['terms', ['bt', ['num', ['pos', ('numeral', '1')]]], ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['const', ('identifier', 'a')]]]]]]]], ['rule', ['sent', ['disj', ['disj', ['unit', ['literal', ['patom', ('identifier', 'q1')]]], ['unit', ['literal', ['patom', ('identifier', 'q2')]]]], ['unit', ['literal', ['patom', ('identifier', 'q3')]]]]]], ['rule', ['sent', ['unit', ['literal', ['patom', ('identifier', 'r')]]]], ['sent', ['conj', ['conj', ['unit', ['literal', ['patom', ('identifier', 's1')]]], ['literal', ['patom', ('identifier', 's2')]]], ['neg_literal', ['patom', ('identifier', 's3')]]]]]]]

########## ########## ########## ########## ########## ########## ########## ##########

LINKED (ASP)

['progr', ['sdefs', ['sdef', ('identifier', 'ground_terms'), ['terms', ['gterms', ['num', ['pos', ('numeral', '1')]], ['num', ['pos', ('numeral', '2')]], ['const', ('identifier', 'a')]]]]], ['pdecls', ['pdecl', ('identifier', 'q2')], ['pdecl', ('identifier', 's2')], ['pdecl', ('identifier', 'p0')], ['pdecl', ('identifier', 'q3')], ['pdecl', ('identifier', 'r')], ['pdecl', ('identifier', 's3')], ['pdecl', ('identifier', 's1')], ['pdecl', ('identifier', 'p2'), ['snames', ['sname', ('identifier', 'ground_terms')], ['sname', ('identifier', 'ground_terms')]]], ['pdecl', ('identifier', 'p3'), ['snames', ['sname', ('identifier', 'ground_terms')], ['sname', ('identifier', 'ground_terms')], ['sname', ('identifier', 'ground_terms')]]], ['pdecl', ('identifier', 'q1')]], ['rules', ['fact', ['head', ['unit', ['literal', ['patom', ('identifier', 'p0')]]]]], ['fact', ['head', ['unit', ['literal', ['patom', ('identifier', 'p2'), ['terms', ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['num', ['pos', ('numeral', '2')]]]]]]]]], ['fact', ['head', ['unit', ['literal', ['patom', ('identifier', 'p3'), ['terms', ['bt', ['num', ['pos', ('numeral', '1')]]], ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['const', ('identifier', 'a')]]]]]]]], ['fact', ['head', ['disj', ['disj', ['unit', ['literal', ['patom', ('identifier', 'q1')]]], ['unit', ['literal', ['patom', ('identifier', 'q2')]]]], ['unit', ['literal', ['patom', ('identifier', 'q3')]]]]]], ['long_rule', ['head', ['unit', ['literal', ['patom', ('identifier', 'r')]]]], ['body', ['conj', ['conj', ['unit', ['literal', ['patom', ('identifier', 's1')]]], ['literal', ['patom', ('identifier', 's2')]]], ['not_literal', ['patom', ('identifier', 's3')]]]]]]]

########## ########## ########## ########## ########## ########## ########## ##########
SUBMODULES OF 'LINKER'
########## ########## ########## ########## ########## ########## ########## ##########

TRANSFORMED (ASP)

['rules', ['fact', ['head', ['unit', ['literal', ['patom', ('identifier', 'p0')]]]]], ['fact', ['head', ['unit', ['literal', ['patom', ('identifier', 'p2'), ['terms', ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['num', ['pos', ('numeral', '2')]]]]]]]]], ['fact', ['head', ['unit', ['literal', ['patom', ('identifier', 'p3'), ['terms', ['bt', ['num', ['pos', ('numeral', '1')]]], ['bt', ['num', ['pos', ('numeral', '2')]]], ['bt', ['const', ('identifier', 'a')]]]]]]]], ['fact', ['head', ['disj', ['disj', ['unit', ['literal', ['patom', ('identifier', 'q1')]]], ['unit', ['literal', ['patom', ('identifier', 'q2')]]]], ['unit', ['literal', ['patom', ('identifier', 'q3')]]]]]], ['long_rule', ['head', ['unit', ['literal', ['patom', ('identifier', 'r')]]]], ['body', ['conj', ['conj', ['unit', ['literal', ['patom', ('identifier', 's1')]]], ['literal', ['patom', ('identifier', 's2')]]], ['not_literal', ['patom', ('identifier', 's3')]]]]]]

########## ########## ########## ########## ########## ########## ########## ##########

EXTRACTED

ground_terms_list

[['num', ['pos', ('numeral', '1')]], ['num', ['pos', ('numeral', '2')]], ['const', ('identifier', 'a')]]

predicates

{('q2', 0), ('s2', 0), ('p0', 0), ('q3', 0), ('r', 0), ('s3', 0), ('s1', 0), ('p2', 2), ('p3', 3), ('q1', 0)}
