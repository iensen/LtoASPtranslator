 init := {} 
 cells := {1..9}
 gameBoard := {1..9}
 occupies(p,c) iff (p,c) in Gamma
 occupied(c)   iff occupies('x',c) or occupies('o',c)

 rows := hRows U vRows U diagonals
 where
   hRows = {{1,2,3},{4,5,6},{7,8,9}} & 
   vRows = {{1,4,7},{2,5,8},{3,6,9}} &
   diagonals = {{1,5,9},{3,5,7}}

 threeInRow(p) iff 
   some R in rows. all c in R. occupies(p,c)
 boardFull iff 
   all c in cells. occupied(c)
gameOver iff
    boardFull or threeInRow('x') or threeInRow('o')
 If ~gameOver then
   currentPlayer:=
     'x' if even(|Gamma|);
     'o' otherwise
 
 even(n) iff n mod 2=0
 legalToMoveIn(c) iff  ~occupied(c) &  ~gameOver   
gridDisplay := {L1,L2,L3,L4} 
where
 L1 = ((200,100),(200,400)) &
 L2 = ((300,100),(300,400)) &
 L3 = ((100,200),(400,200)) &
 L4 = ((100,300),(400,300))
 fontSize := 15
 centerX(c):= 150+100*((c-1) mod 3)
 centerO(c):= 350-100*(floor((c-1)/3))
xImage(c) :=
  ((centerX(c), centerO(c)), fontSize,<120>)
  
 oImage(c) :=
  ((centerX(c), centerO(c)), fontSize,<111>)

 cellDisplay(c) :=
    {xImage(c)} if ('x',c) in Gamma;  
    {oImage(c)} if ('o',c) in Gamma; 
    {}          otherwise
 cellDisplays :=
    Union[c in gameBoard] cellDisplay(c)

 currentPlayerDisplay := 
   {((100,450),15,"x's Turn")} if currentPlayer='x';
   {((100,450),15,"o's Turn")} if currentPlayer='o'
 restartButton := {A1,A2,A3,A4,txt}
 where
   A1 = ((400,475),(500,475)) &
   A2 = ((400,425),(500,425)) &
   A3 = ((400,475),(400,425)) &
   A4 = ((500,475),(500,425)) &
   txt = ((450, 450), 15,restart)

If gameOver then
 gameResultDisplay := 
    {((100,450),15,"x won")} if threeInRow('x');
    {((100,450),15,"o won")} if threeInRow('o');
    {((100,450),15,catgotit)}  otherwisewise
 alwaysDisplay :=
   gridDisplay  U cellDisplays  U restartButton 

 gameInPlayDisplay := 
   alwaysDisplay U currentPlayerDisplay

 gameOverDisplay := 
   alwaysDisplay U gameResultDisplay

 display := 
   gameOverDisplay   if gameOver;
   gameInPlayDisplay otherwise
 xMin(c) := 100+100*((c-1) mod 3) 
 xMax(c) := 200+100*((c-1) mod 3)
 yMin(c) := 300-100*(floor((c-1)/3))
 yMax(c) := 400-100*(floor((c-1)/3)) 
 xCoord(pt):= pt[1]     yCoord(pt):= pt[2]
 clicked(c) iff 
   (xCoord(click)>xMin(c)) & (xCoord(click)< xMax(c)) &
   (yCoord(click)>yMin(c)) & (yCoord(click)< yMax(c))
 restartClicked iff 
   xCoord(click)>400 & xCoord(click)<500 & 
   yCoord(click)>425 & yCoord(click)<725
 moveMadeIn(c) iff clicked(c) & legalToMoveIn(c)

 movesMade := {(currentPlayer,c) | c in cells & moveMadeIn(c)}
newState := 
  init               if restartClicked;
  Gamma U movesMade  otherwise









